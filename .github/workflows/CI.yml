name: CI

on:
  pull_request:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      devices: ${{ steps.devices-array.outputs.devices }}
    steps:
      - uses: actions/checkout@v2.4.0
      - id: devices-array
        run: |
          files=$(ls -m *-for-ESPHome.yaml | sed s/"-for-ESPHome.yaml"//g )
          fileslist=$(echo "$files" | jq -Rcn 'inputs | . / ", "')
          echo ::set-output name=devices::$fileslist

  setup_deploy:
    name: Setup Deploy for ${{ matrix.device }}
    needs: [setup]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: ${{ fromJSON(needs.setup.outputs.devices) }}
      max-parallel: 1
    steps:
      - run: |
          mkdir output
      - uses: actions/download-artifact@v2.1.0
        with:
          name: deploy
          path: output
        continue-on-error: true
      - run: |
          printf "\n## ${{ matrix.device }}\n" >> output/install_esphome_buttons.md
          printf "<esp-web-install-button manifest=\"./${{ matrix.device }}/manifest.json\"><button slot=\"activate\">Install ${{ matrix.device }} Firmware</button></esp-web-install-button>" >> output/install_esphome_buttons.md
      - run: |
          printf "\n## ${{ matrix.device }}\n" >> output/install_esphome_buttons_from_stock.md
          printf "\`\`\`\n https://arvernus.github.io/Shelly-for-ESPHome/mg2esphome-${{ matrix.device }}/fw.zip \n\`\`\`" >> output/install_esphome_buttons_from_stock.md
      - uses: actions/upload-artifact@v2.1.0
        with:
          name: deploy
          path: output

  build_esphome_firmware:
    name: Build ESPHome binary for ${{ matrix.device }}
    needs: [setup]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: ${{ fromJSON(needs.setup.outputs.devices) }}
    outputs:
      esphome-version: ${{ steps.esphome-build.outputs.esphome-version }}
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: esphome/build-action@v1.1.0
        id: esphome-build
        with:
          yaml_file: ${{ matrix.device }}-for-ESPHome.yaml
      - uses: actions/upload-artifact@v2.3.0
        with:
          name: ${{ matrix.device }}
          path: ${{ steps.esphome-build.outputs.name }}
          if-no-files-found: error

  complet_manifest:
    name: Compleat manifest for ${{ matrix.device }}
    needs: [setup, build_esphome_firmware]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: ${{ fromJSON(needs.setup.outputs.devices) }}
    steps:
      - uses: actions/download-artifact@v2.1.0
        with:
          name: ${{ matrix.device }}
          path: output
      - name: Complet manifest.json
        run: |
          mv output/manifest.json manifest.json
          jq -s '{"name": "${{ matrix.device }} for ESPHome", "version": "${{ needs.build_esphome_firmware.outputs.esphome-version }}", "home_assistant_domain": "esphome", "new_install_skip_erase": false, "builds":.}' manifest.json > output/manifest.json
      - uses: actions/upload-artifact@v2.3.0
        with:
          name: ${{ matrix.device }}
          path: output
          if-no-files-found: error

  build_migration_firmware:
    name: Build Migration Firmware for ${{ matrix.device }}
    needs: [setup]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: ${{ fromJSON(needs.setup.outputs.devices) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Get Devicename
        id: get_esphome_name
        uses: cumulusds/get-yaml-paths-action@v0.1.1
        with:
          file: ${{ matrix.device }}-for-ESPHome.yaml
          esphomename: substitutions.devicename
      - run: |
          printf "\napply:" >> migration_firmware/mos.yml
          printf "\n  name: ${{ steps.get_esphome_name.outputs.esphomename }}" >> migration_firmware/mos.yml
          printf "\n  config_schema:" >> migration_firmware/mos.yml
          printf "\n    - [" >> migration_firmware/mos.yml
          printf "\n        mg2x.url," >> migration_firmware/mos.yml
          printf "\n        s," >> migration_firmware/mos.yml
          printf "\n        'https://arvernus.github.io/Shelly-for-ESPHome/${{ steps.get_esphome_name.outputs.esphomename }}/firmware.bin'," >> migration_firmware/mos.yml
          printf "\n        {title: URL of target firmware}," >> migration_firmware/mos.yml
          printf "\n      ]" >> migration_firmware/mos.yml
          cat migration_firmware/mos.yml
      - name: Build firmware
        uses: yaourdt/mongoose-os-action@v2.0.2
        with:
          mos-yml-path: migration_firmware
          platform: esp8266
          build-args: --build-var MODEL=${{ matrix.device }}
        id: mos_build
      - uses: actions/upload-artifact@v2.3.0
        with:
          name: mg2esphome-${{ matrix.device }}
          path: migration_firmware/build/fw.zip
          if-no-files-found: error
  test:
    name: Test Builds
    runs-on: ubuntu-latest
    needs: [build_esphome_firmware, build_migration_firmware, complet_manifest]
    steps:
      - uses: actions/download-artifact@v2

  publish:
    #if: github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.branch =='main'
    name: Publish new firmware and website to GitHub Pages
    runs-on: ubuntu-latest
    needs: [test, setup_deploy]
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/download-artifact@v2.1.0
        with:
          path: output
      - run: |
          cp -R static/* output
          mv output/deploy deploy
          printf "$(<deploy/install_esphome_buttons.md)" >> output/index.md
          printf "$(<deploy/install_esphome_buttons_from_stock.md)" >> output/index.md
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.6
        with:
          branch: gh-pages
          folder: output

name: CI

on:
  pull_request:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      devices: ${{ steps.devices.list }}
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Define List of devices
        id: devices
        run: |
          files=$(ls -m *-for-ESPHome.yaml)
          devices=${files//-for-ESPHome.yaml/}
          json=$(echo $devices | jq -Rcn 'inputs | . / ","')
          echo ::set-output name=list::$json

  build_esphome_firmware:
    name: Build ESPHome binary for ${{ matrix.file }}
    needs: [prepare]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: ${{ fromJson(needs.prepare.outputs.devices) }}
    outputs:
      esphome-version: ${{ steps.esphome-build.outputs.esphome-version }}
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: esphome/build-action@v1.1.0
        id: esphome-build
        with:
          yaml_file: ${{ matrix.device }}-for-ESPHome.yaml
      - uses: actions/upload-artifact@v2.3.0
        with:
          name: esphome_firmware/${{ steps.esphome-build.outputs.name }}
          path: ${{ steps.esphome-build.outputs.name }}
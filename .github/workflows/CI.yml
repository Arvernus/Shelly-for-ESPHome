name: CI

on:
  pull_request:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      devices: ${{ steps.devices-array.outputs.devices }}
    steps:
      - uses: actions/checkout@v2.4.0
      - id: devices-array
        run: |
          files=$(ls -m *-for-ESPHome.yaml | sed s/"-for-ESPHome.yaml"//g )
          fileslist=$(echo "$files" | jq -Rcn 'inputs | . / ", "')
          echo ::set-output name=devices::$fileslist

  build_esphome_firmware:
    name: Build ESPHome binary for ${{ matrix.device }}
    needs: [setup]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: ${{ fromJSON(needs.setup.outputs.devices) }}
    outputs:
      esphome-version: ${{ steps.esphome-build.outputs.esphome-version }}
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: esphome/build-action@v1.1.0
        id: esphome-build
        with:
          yaml_file: ${{ matrix.device }}-for-ESPHome.yaml
      - uses: actions/upload-artifact@v2.3.0
        with:
          name: ${{ steps.esphome-build.outputs.name }}
          path: ${{ steps.esphome-build.outputs.name }}

  build_mirgration_firmware:
    name: Build Migration Firmware for ${{ matrix.file }}
    needs: [prepare, build_esphome_firmware]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: ${{ fromJson(needs.prepare.outputs.devices) }}
      steps:
        - uses: actions/checkout@v2.4.0
        - uses: actions/download-artifact@v2.1.0
          with:
            path: esphome_firmware
        - name: Build firmware
          uses: yaourdt/mongoose-os-action@v1.0.2
          with:
            mos-yml-path: mirgration_firmware
            build-var: MODEL=${{ matrix.device }}
          id: mos_build
